<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                   http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet author="sergiu" id="1-3" dbms="!h2">
        <sql>
            DROP PROCEDURE IF EXISTS InsertSeats;
        </sql>
    </changeSet>
    <changeSet author="sergiu" id="1-4" dbms="!h2">
        <sql splitStatements="false">
            CREATE PROCEDURE InsertSeats()
            BEGIN
            DECLARE seat_row CHAR(1);        -- Declare a character variable for rows A-Z
            DECLARE seat_number INT;         -- Declare an integer for seat numbers 1-6
            DECLARE aircraft INT DEFAULT 1;  -- Declare airplane ID, starting from 1

            WHILE aircraft &lt;= 10 DO         -- Loop through 10 airplanes
            SET seat_row = 'A';         -- Start with row A for each airplane

            WHILE seat_row != 'Z' DO   -- Loop through rows A-Z
            SET seat_number = 1;    -- Start seat numbers at 1

            WHILE seat_number &lt;= 6 DO  -- Loop through seat numbers 1-6
            INSERT INTO seat (seat_code, seat_available, aircraft_id)
            VALUES (CONCAT(seat_row, seat_number), 1, aircraft); -- Insert seat
            SET seat_number = seat_number + 1;  -- Increment seat number
            END WHILE;

            SET seat_row = CHAR(ASCII(seat_row) + 1); -- Move to the next row (B, C, etc.)
            END WHILE;

            SET aircraft = aircraft + 1;  -- Move to the next airplane
            END WHILE;
            END;
        </sql>
    </changeSet>
    <changeSet author="sergiu" id="1-5" dbms="!h2">
        <sql>
            CALL InsertSeats();
        </sql>
    </changeSet>
    <changeSet author="sergiu" id="1-6" dbms="!h2">
        <sql>
            DROP PROCEDURE IF EXISTS InsertSeats;
        </sql>
    </changeSet>
</databaseChangeLog>